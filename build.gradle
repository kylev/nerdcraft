buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//apply plugin: 'curseforge'

version = "${modVersion}"
group = "com.kylev.nerdingcraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "NerdingCraft"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${project.minecraftVersion}-${project.forgeVersion}"
    runDir = "eclipse"
    mappings = "snapshot_20171003"

    replaceIn "reference/Reference.java"
    replace "@VERSION@", modVersion
}

/*
curse {
    projectId = '228512'
    apiKey = project.hasProperty('curseForgeApiKey') ? project.curseForgeApiKey : ''
    releaseType = 'alpha'
}
*/

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", modVersion
    inputs.property "mcversion", minecraftVersion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': modVersion, 'mcversion': minecraftVersion
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives devJar
    archives sourcesJar
    archives javadocJar
}

/*
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: project.hasProperty('mavenSiteRoot') ? project.mavenSiteRoot : '')

            pom {
                project {
                    scm {
                        url 'https://github.com/kylev/nerdingcraft'
                        connection 'scm:git:git://github.com/kylev/nerdingcraft.git'
                        developerConnection 'scm:git:git@github.com:kylev/nerdingcraft.git'
                    }

                    issueManagement {
                        system 'github'
                        url 'https://github.com/kylev/nerdingcraft/issues'
                    }
                }
            }
        }
    }
}
*/